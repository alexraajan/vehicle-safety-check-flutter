// Mocks generated by Mockito 5.4.5 from annotations
// in project_flutter/test/widgets/add_vehicle_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:project_flutter/services/vehicle_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [VehicleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVehicleService extends _i1.Mock implements _i3.VehicleService {
  MockVehicleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i5.Future<_i2.Response> addVehicle(Map<String, dynamic>? vehicleData) =>
      (super.noSuchMethod(
            Invocation.method(#addVehicle, [vehicleData]),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_1(
                this,
                Invocation.method(#addVehicle, [vehicleData]),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> updateVehicle(Map<String, dynamic>? vehicleData) =>
      (super.noSuchMethod(
            Invocation.method(#updateVehicle, [vehicleData]),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_1(
                this,
                Invocation.method(#updateVehicle, [vehicleData]),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<List<dynamic>> searchVehicle(String? vehicleNo) =>
      (super.noSuchMethod(
            Invocation.method(#searchVehicle, [vehicleNo]),
            returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i5.Future<List<dynamic>>);

  @override
  _i5.Future<List<dynamic>> fetchAllVehicles() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllVehicles, []),
            returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i5.Future<List<dynamic>>);

  @override
  _i5.Future<bool> deleteVehicle(String? vehicleNo) =>
      (super.noSuchMethod(
            Invocation.method(#deleteVehicle, [vehicleNo]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
